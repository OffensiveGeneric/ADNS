meta_metrics.json — the headline metrics
    What it contains: Precision, Recall, F1-score (and AUC / confusion matrix if available).

    How to interpret:
        Precision = how many alerts were true positives (low false positive means higher operational trust).
        Recall = how many actual attacks were detected (missed attacks are dangerous).
        F1 = harmonic mean balances precision & recall.
        AUC (if present) measures separability of scores — good to show as model quality.

    Talking point: “Our meta-model achieves X precision and Y recall on the held-out test set 
    (see meta_metrics.json). This means for every 100 alerts, approximately X are real incidents; 
    and we detect Y% of the attack events in the test set.”

train_with_scores.csv / test_with_scores.csv — detector outputs
    What they show: For every aggregated row (window + src + dst), each classical detector outputs a normalized score (0–1).

    How to explain:
        iso_score is sensitive to global outliers in the feature space (spikes in flows/packets/bytes).
        lof_score finds points that sit in low-density neighborhoods (useful for subtle or local anomalies).
        ae_score (in *_with_ae.csv) is the reconstruction error from the learned representation and catches patterns that classical detectors miss (e.g., collective anomalies).

    Talking point: “We run multiple detectors in parallel — each produces a different view of ‘suspiciousness’; the meta-model learns how to combine them.”

aggregated_10m.csv — streaming input
    What it shows: Flow-level aggregates over 10-minute windows with features such as n_flows, n_packets, total_bytes, bytes_per_packet.

    How to explain: This is the stream our front-end listens to in real time. We simulate live traffic by reading rows from this file and emitting alerts.


meta_xgb.model (model file)
    What it shows: The trained fusion model — proof we trained a supervised decision layer on top of detectors.
    How to explain: You can state that this artifact can be loaded and used in production to score live inputs.